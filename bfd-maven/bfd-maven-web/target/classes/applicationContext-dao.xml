<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd   
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.2.xsd"
    default-autowire="byName">
    <!-- 定义个缺省的控制适配器 -->
    <bean
        class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />
    <!-- 获取配置文件 -->
    <bean id="config"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:mysql.properties</value>
                <value>classpath:email.properties</value>
                <value>classpath:redis.properties</value>
                <value>classpath:es.properties</value>
                <value>classpath:ftp.properties</value>
                <value>classpath:io.properties</value>
                <value>classpath:bdms.properties</value>
            </list>
        </property>
    </bean>
    <!-- 本地测试的配置文件 -->
    <!-- 获取数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName">
            <value>${db.dirverClass}</value>
        </property>
        <property name="url">
            <value>${db.url}</value>
        </property>
      <property name="username">
            <value>${db.username}</value>
        </property>
        <property name="password">
            <value>${db.password}</value>
        </property>
    </bean>
    <!-- SessionFactory -->
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <!-- <property name="mappingLocations">
            <list>
                <value>classpath*:com/bfd/**/entity/*.hbm.xml</value>
            </list>
        </property> -->
        <property name="packagesToScan" value="com.bfd"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.query.factory_class">org.hibernate.hql.ast.ASTQueryTranslatorFactory
                </prop>
                <prop key="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider
                </prop><!--
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                -->
                 <prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                 <prop key="hibernate.hbm2ddl.auto">update</prop> 
                <prop key="hibernate.bytecode.use_reflection_optimizer">false</prop>
                <!-- 是否启用二级缓存 ，默认为不开启 -->
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <!-- 是否缓存查询结果 -->
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <!-- 二级缓存实现的类全名，所使用的缓存都需要实现org.hibernate.cache.CacheProvider接口 -->
                <prop key="hibernate.cache.use_structured_entries">true</prop>
                <!-- 是否使用结构化的方式缓存对象 -->
                <prop key="hibernate.cache.use_minimal_puts">false</prop>
                <!-- true（默认） 是否优化二级缓存来最小化读写操作，集群时的缓存优化 -->
                <prop key="hibernate.use_sql_comments">true</prop>
                <!-- 如果设置为true，Hiberante将为SQL产生注释，这样更利于调试。默认值为false -->
                <prop key="hibernate.generate_statistics">false</prop>
                <!-- Hibernate将为性能调整，收集统计信息 -->
                <prop key="hibernate.jdbc.batch_size">20</prop>
                <!--指定Hibernate如何使用JDBC2批量更新。取值，推荐5到30 -->
                <prop key="hibernate.order_inserts">true</prop>
                <prop key="hibernate.connection.release_mode">auto</prop>
                <!--<prop key="hibernate.default_schema">ams</prop> -->
                <prop key="hibernate.hbm2ddl.auto">update</prop> 
                <prop key="connection.autoReconnect">true</prop>
                <!-- <prop key="connection.autoReconnect">true</prop>
                <prop key="connection.autoReconnectForPools">true</prop>
                <prop key="connection.is-connection-validation-required">true</prop>  -->
            </props>
            
        </property>
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
        <!-- <property name="lobHandler" ref="defaultLobHandler" /> -->
    </bean>

    <!-- TransactionManager -->
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref local="sessionFactory" />
        </property>
    </bean>

    <bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
        lazy-init="true" />

    <bean id="txTemplate"
        class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager" />
    </bean>

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>


    
    <bean id="pollingConnectionManager"
    class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager">
	    <property name="maxTotal" value="10" />
	    <property name="defaultMaxPerRoute" value="5" />
     </bean>

    
    
 </beans>


